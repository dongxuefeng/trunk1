//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace Ehl.Atms.Tgs.lifebelt_check.DataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DbParameter[]))]
    public partial class DataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WebserviceTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getstr_BySqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStr_ByFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStr_ByIdxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_NonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_ProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_SqlParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DataSet_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getstr_BySql_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStr_ByField_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStr_ByIdx_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_NonQuery_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_Procedure_DacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Execute_SqlParameter_DacNameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataService() {
            this.Url = global::Ehl.Atms.Tgs.lifebelt_check.Properties.Settings.Default.Ehl_Atms_Tgs_ExportPeccancy_DataService_DataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WebserviceTestCompletedEventHandler WebserviceTestCompleted;
        
        /// <remarks/>
        public event Get_DataSetCompletedEventHandler Get_DataSetCompleted;
        
        /// <remarks/>
        public event Getstr_BySqlCompletedEventHandler Getstr_BySqlCompleted;
        
        /// <remarks/>
        public event GetStr_ByFieldCompletedEventHandler GetStr_ByFieldCompleted;
        
        /// <remarks/>
        public event GetStr_ByIdxCompletedEventHandler GetStr_ByIdxCompleted;
        
        /// <remarks/>
        public event Execute_NonQueryCompletedEventHandler Execute_NonQueryCompleted;
        
        /// <remarks/>
        public event Execute_ProcedureCompletedEventHandler Execute_ProcedureCompleted;
        
        /// <remarks/>
        public event Execute_SqlParameterCompletedEventHandler Execute_SqlParameterCompleted;
        
        /// <remarks/>
        public event Get_DataSet_DacNameCompletedEventHandler Get_DataSet_DacNameCompleted;
        
        /// <remarks/>
        public event Getstr_BySql_DacNameCompletedEventHandler Getstr_BySql_DacNameCompleted;
        
        /// <remarks/>
        public event GetStr_ByField_DacNameCompletedEventHandler GetStr_ByField_DacNameCompleted;
        
        /// <remarks/>
        public event GetStr_ByIdx_DacNameCompletedEventHandler GetStr_ByIdx_DacNameCompleted;
        
        /// <remarks/>
        public event Execute_NonQuery_DacNameCompletedEventHandler Execute_NonQuery_DacNameCompleted;
        
        /// <remarks/>
        public event Execute_Procedure_DacNameCompletedEventHandler Execute_Procedure_DacNameCompleted;
        
        /// <remarks/>
        public event Execute_SqlParameter_DacNameCompletedEventHandler Execute_SqlParameter_DacNameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebserviceTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WebserviceTest() {
            object[] results = this.Invoke("WebserviceTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WebserviceTestAsync() {
            this.WebserviceTestAsync(null);
        }
        
        /// <remarks/>
        public void WebserviceTestAsync(object userState) {
            if ((this.WebserviceTestOperationCompleted == null)) {
                this.WebserviceTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebserviceTestOperationCompleted);
            }
            this.InvokeAsync("WebserviceTest", new object[0], this.WebserviceTestOperationCompleted, userState);
        }
        
        private void OnWebserviceTestOperationCompleted(object arg) {
            if ((this.WebserviceTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebserviceTestCompleted(this, new WebserviceTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DataSet(string Sqlstr) {
            object[] results = this.Invoke("Get_DataSet", new object[] {
                        Sqlstr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DataSetAsync(string Sqlstr) {
            this.Get_DataSetAsync(Sqlstr, null);
        }
        
        /// <remarks/>
        public void Get_DataSetAsync(string Sqlstr, object userState) {
            if ((this.Get_DataSetOperationCompleted == null)) {
                this.Get_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DataSetOperationCompleted);
            }
            this.InvokeAsync("Get_DataSet", new object[] {
                        Sqlstr}, this.Get_DataSetOperationCompleted, userState);
        }
        
        private void OnGet_DataSetOperationCompleted(object arg) {
            if ((this.Get_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DataSetCompleted(this, new Get_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getstr_BySql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Getstr_BySql(string Sqlstr) {
            object[] results = this.Invoke("Getstr_BySql", new object[] {
                        Sqlstr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Getstr_BySqlAsync(string Sqlstr) {
            this.Getstr_BySqlAsync(Sqlstr, null);
        }
        
        /// <remarks/>
        public void Getstr_BySqlAsync(string Sqlstr, object userState) {
            if ((this.Getstr_BySqlOperationCompleted == null)) {
                this.Getstr_BySqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetstr_BySqlOperationCompleted);
            }
            this.InvokeAsync("Getstr_BySql", new object[] {
                        Sqlstr}, this.Getstr_BySqlOperationCompleted, userState);
        }
        
        private void OnGetstr_BySqlOperationCompleted(object arg) {
            if ((this.Getstr_BySqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getstr_BySqlCompleted(this, new Getstr_BySqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStr_ByField", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStr_ByField(string Sqlstr, string Field) {
            object[] results = this.Invoke("GetStr_ByField", new object[] {
                        Sqlstr,
                        Field});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStr_ByFieldAsync(string Sqlstr, string Field) {
            this.GetStr_ByFieldAsync(Sqlstr, Field, null);
        }
        
        /// <remarks/>
        public void GetStr_ByFieldAsync(string Sqlstr, string Field, object userState) {
            if ((this.GetStr_ByFieldOperationCompleted == null)) {
                this.GetStr_ByFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStr_ByFieldOperationCompleted);
            }
            this.InvokeAsync("GetStr_ByField", new object[] {
                        Sqlstr,
                        Field}, this.GetStr_ByFieldOperationCompleted, userState);
        }
        
        private void OnGetStr_ByFieldOperationCompleted(object arg) {
            if ((this.GetStr_ByFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStr_ByFieldCompleted(this, new GetStr_ByFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStr_ByIdx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStr_ByIdx(string Sqlstr, int Index) {
            object[] results = this.Invoke("GetStr_ByIdx", new object[] {
                        Sqlstr,
                        Index});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStr_ByIdxAsync(string Sqlstr, int Index) {
            this.GetStr_ByIdxAsync(Sqlstr, Index, null);
        }
        
        /// <remarks/>
        public void GetStr_ByIdxAsync(string Sqlstr, int Index, object userState) {
            if ((this.GetStr_ByIdxOperationCompleted == null)) {
                this.GetStr_ByIdxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStr_ByIdxOperationCompleted);
            }
            this.InvokeAsync("GetStr_ByIdx", new object[] {
                        Sqlstr,
                        Index}, this.GetStr_ByIdxOperationCompleted, userState);
        }
        
        private void OnGetStr_ByIdxOperationCompleted(object arg) {
            if ((this.GetStr_ByIdxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStr_ByIdxCompleted(this, new GetStr_ByIdxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_NonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_NonQuery(string Sqlstr) {
            object[] results = this.Invoke("Execute_NonQuery", new object[] {
                        Sqlstr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_NonQueryAsync(string Sqlstr) {
            this.Execute_NonQueryAsync(Sqlstr, null);
        }
        
        /// <remarks/>
        public void Execute_NonQueryAsync(string Sqlstr, object userState) {
            if ((this.Execute_NonQueryOperationCompleted == null)) {
                this.Execute_NonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_NonQueryOperationCompleted);
            }
            this.InvokeAsync("Execute_NonQuery", new object[] {
                        Sqlstr}, this.Execute_NonQueryOperationCompleted, userState);
        }
        
        private void OnExecute_NonQueryOperationCompleted(object arg) {
            if ((this.Execute_NonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_NonQueryCompleted(this, new Execute_NonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_Procedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_Procedure(string ProcedureName, DbParameter[] paras) {
            object[] results = this.Invoke("Execute_Procedure", new object[] {
                        ProcedureName,
                        paras});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_ProcedureAsync(string ProcedureName, DbParameter[] paras) {
            this.Execute_ProcedureAsync(ProcedureName, paras, null);
        }
        
        /// <remarks/>
        public void Execute_ProcedureAsync(string ProcedureName, DbParameter[] paras, object userState) {
            if ((this.Execute_ProcedureOperationCompleted == null)) {
                this.Execute_ProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_ProcedureOperationCompleted);
            }
            this.InvokeAsync("Execute_Procedure", new object[] {
                        ProcedureName,
                        paras}, this.Execute_ProcedureOperationCompleted, userState);
        }
        
        private void OnExecute_ProcedureOperationCompleted(object arg) {
            if ((this.Execute_ProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_ProcedureCompleted(this, new Execute_ProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_SqlParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_SqlParameter(CommandType commandType, string Sqlstr, DbParameter[] paras) {
            object[] results = this.Invoke("Execute_SqlParameter", new object[] {
                        commandType,
                        Sqlstr,
                        paras});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_SqlParameterAsync(CommandType commandType, string Sqlstr, DbParameter[] paras) {
            this.Execute_SqlParameterAsync(commandType, Sqlstr, paras, null);
        }
        
        /// <remarks/>
        public void Execute_SqlParameterAsync(CommandType commandType, string Sqlstr, DbParameter[] paras, object userState) {
            if ((this.Execute_SqlParameterOperationCompleted == null)) {
                this.Execute_SqlParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_SqlParameterOperationCompleted);
            }
            this.InvokeAsync("Execute_SqlParameter", new object[] {
                        commandType,
                        Sqlstr,
                        paras}, this.Execute_SqlParameterOperationCompleted, userState);
        }
        
        private void OnExecute_SqlParameterOperationCompleted(object arg) {
            if ((this.Execute_SqlParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_SqlParameterCompleted(this, new Execute_SqlParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_DataSet_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DataSet_DacName(string Sqlstr, string DataAccessName) {
            object[] results = this.Invoke("Get_DataSet_DacName", new object[] {
                        Sqlstr,
                        DataAccessName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DataSet_DacNameAsync(string Sqlstr, string DataAccessName) {
            this.Get_DataSet_DacNameAsync(Sqlstr, DataAccessName, null);
        }
        
        /// <remarks/>
        public void Get_DataSet_DacNameAsync(string Sqlstr, string DataAccessName, object userState) {
            if ((this.Get_DataSet_DacNameOperationCompleted == null)) {
                this.Get_DataSet_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DataSet_DacNameOperationCompleted);
            }
            this.InvokeAsync("Get_DataSet_DacName", new object[] {
                        Sqlstr,
                        DataAccessName}, this.Get_DataSet_DacNameOperationCompleted, userState);
        }
        
        private void OnGet_DataSet_DacNameOperationCompleted(object arg) {
            if ((this.Get_DataSet_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DataSet_DacNameCompleted(this, new Get_DataSet_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getstr_BySql_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Getstr_BySql_DacName(string Sqlstr, string DataAccessName) {
            object[] results = this.Invoke("Getstr_BySql_DacName", new object[] {
                        Sqlstr,
                        DataAccessName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Getstr_BySql_DacNameAsync(string Sqlstr, string DataAccessName) {
            this.Getstr_BySql_DacNameAsync(Sqlstr, DataAccessName, null);
        }
        
        /// <remarks/>
        public void Getstr_BySql_DacNameAsync(string Sqlstr, string DataAccessName, object userState) {
            if ((this.Getstr_BySql_DacNameOperationCompleted == null)) {
                this.Getstr_BySql_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetstr_BySql_DacNameOperationCompleted);
            }
            this.InvokeAsync("Getstr_BySql_DacName", new object[] {
                        Sqlstr,
                        DataAccessName}, this.Getstr_BySql_DacNameOperationCompleted, userState);
        }
        
        private void OnGetstr_BySql_DacNameOperationCompleted(object arg) {
            if ((this.Getstr_BySql_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getstr_BySql_DacNameCompleted(this, new Getstr_BySql_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStr_ByField_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStr_ByField_DacName(string Sqlstr, string Field, string DataAccessName) {
            object[] results = this.Invoke("GetStr_ByField_DacName", new object[] {
                        Sqlstr,
                        Field,
                        DataAccessName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStr_ByField_DacNameAsync(string Sqlstr, string Field, string DataAccessName) {
            this.GetStr_ByField_DacNameAsync(Sqlstr, Field, DataAccessName, null);
        }
        
        /// <remarks/>
        public void GetStr_ByField_DacNameAsync(string Sqlstr, string Field, string DataAccessName, object userState) {
            if ((this.GetStr_ByField_DacNameOperationCompleted == null)) {
                this.GetStr_ByField_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStr_ByField_DacNameOperationCompleted);
            }
            this.InvokeAsync("GetStr_ByField_DacName", new object[] {
                        Sqlstr,
                        Field,
                        DataAccessName}, this.GetStr_ByField_DacNameOperationCompleted, userState);
        }
        
        private void OnGetStr_ByField_DacNameOperationCompleted(object arg) {
            if ((this.GetStr_ByField_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStr_ByField_DacNameCompleted(this, new GetStr_ByField_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStr_ByIdx_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStr_ByIdx_DacName(string Sqlstr, int Index, string DataAccessName) {
            object[] results = this.Invoke("GetStr_ByIdx_DacName", new object[] {
                        Sqlstr,
                        Index,
                        DataAccessName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStr_ByIdx_DacNameAsync(string Sqlstr, int Index, string DataAccessName) {
            this.GetStr_ByIdx_DacNameAsync(Sqlstr, Index, DataAccessName, null);
        }
        
        /// <remarks/>
        public void GetStr_ByIdx_DacNameAsync(string Sqlstr, int Index, string DataAccessName, object userState) {
            if ((this.GetStr_ByIdx_DacNameOperationCompleted == null)) {
                this.GetStr_ByIdx_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStr_ByIdx_DacNameOperationCompleted);
            }
            this.InvokeAsync("GetStr_ByIdx_DacName", new object[] {
                        Sqlstr,
                        Index,
                        DataAccessName}, this.GetStr_ByIdx_DacNameOperationCompleted, userState);
        }
        
        private void OnGetStr_ByIdx_DacNameOperationCompleted(object arg) {
            if ((this.GetStr_ByIdx_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStr_ByIdx_DacNameCompleted(this, new GetStr_ByIdx_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_NonQuery_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_NonQuery_DacName(string Sqlstr, string DataAccessName) {
            object[] results = this.Invoke("Execute_NonQuery_DacName", new object[] {
                        Sqlstr,
                        DataAccessName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_NonQuery_DacNameAsync(string Sqlstr, string DataAccessName) {
            this.Execute_NonQuery_DacNameAsync(Sqlstr, DataAccessName, null);
        }
        
        /// <remarks/>
        public void Execute_NonQuery_DacNameAsync(string Sqlstr, string DataAccessName, object userState) {
            if ((this.Execute_NonQuery_DacNameOperationCompleted == null)) {
                this.Execute_NonQuery_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_NonQuery_DacNameOperationCompleted);
            }
            this.InvokeAsync("Execute_NonQuery_DacName", new object[] {
                        Sqlstr,
                        DataAccessName}, this.Execute_NonQuery_DacNameOperationCompleted, userState);
        }
        
        private void OnExecute_NonQuery_DacNameOperationCompleted(object arg) {
            if ((this.Execute_NonQuery_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_NonQuery_DacNameCompleted(this, new Execute_NonQuery_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_Procedure_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_Procedure_DacName(string ProcedureName, DbParameter[] paras, string DataAccessName) {
            object[] results = this.Invoke("Execute_Procedure_DacName", new object[] {
                        ProcedureName,
                        paras,
                        DataAccessName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_Procedure_DacNameAsync(string ProcedureName, DbParameter[] paras, string DataAccessName) {
            this.Execute_Procedure_DacNameAsync(ProcedureName, paras, DataAccessName, null);
        }
        
        /// <remarks/>
        public void Execute_Procedure_DacNameAsync(string ProcedureName, DbParameter[] paras, string DataAccessName, object userState) {
            if ((this.Execute_Procedure_DacNameOperationCompleted == null)) {
                this.Execute_Procedure_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_Procedure_DacNameOperationCompleted);
            }
            this.InvokeAsync("Execute_Procedure_DacName", new object[] {
                        ProcedureName,
                        paras,
                        DataAccessName}, this.Execute_Procedure_DacNameOperationCompleted, userState);
        }
        
        private void OnExecute_Procedure_DacNameOperationCompleted(object arg) {
            if ((this.Execute_Procedure_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_Procedure_DacNameCompleted(this, new Execute_Procedure_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute_SqlParameter_DacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Execute_SqlParameter_DacName(CommandType commandType, string Sqlstr, DbParameter[] paras, string DataAccessName) {
            object[] results = this.Invoke("Execute_SqlParameter_DacName", new object[] {
                        commandType,
                        Sqlstr,
                        paras,
                        DataAccessName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Execute_SqlParameter_DacNameAsync(CommandType commandType, string Sqlstr, DbParameter[] paras, string DataAccessName) {
            this.Execute_SqlParameter_DacNameAsync(commandType, Sqlstr, paras, DataAccessName, null);
        }
        
        /// <remarks/>
        public void Execute_SqlParameter_DacNameAsync(CommandType commandType, string Sqlstr, DbParameter[] paras, string DataAccessName, object userState) {
            if ((this.Execute_SqlParameter_DacNameOperationCompleted == null)) {
                this.Execute_SqlParameter_DacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecute_SqlParameter_DacNameOperationCompleted);
            }
            this.InvokeAsync("Execute_SqlParameter_DacName", new object[] {
                        commandType,
                        Sqlstr,
                        paras,
                        DataAccessName}, this.Execute_SqlParameter_DacNameOperationCompleted, userState);
        }
        
        private void OnExecute_SqlParameter_DacNameOperationCompleted(object arg) {
            if ((this.Execute_SqlParameter_DacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Execute_SqlParameter_DacNameCompleted(this, new Execute_SqlParameter_DacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class DbParameter : MarshalByRefObject {
        
        private DbType dbTypeField;
        
        private ParameterDirection directionField;
        
        private bool isNullableField;
        
        private string parameterNameField;
        
        private int sizeField;
        
        private string sourceColumnField;
        
        private bool sourceColumnNullMappingField;
        
        private DataRowVersion sourceVersionField;
        
        private object valueField;
        
        public DbParameter() {
            this.directionField = ParameterDirection.Input;
            this.parameterNameField = "";
            this.sourceColumnField = "";
            this.sourceColumnNullMappingField = false;
            this.sourceVersionField = DataRowVersion.Current;
        }
        
        /// <remarks/>
        public DbType DbType {
            get {
                return this.dbTypeField;
            }
            set {
                this.dbTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ParameterDirection.Input)]
        public ParameterDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNullable {
            get {
                return this.isNullableField;
            }
            set {
                this.isNullableField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SourceColumn {
            get {
                return this.sourceColumnField;
            }
            set {
                this.sourceColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SourceColumnNullMapping {
            get {
                return this.sourceColumnNullMappingField;
            }
            set {
                this.sourceColumnNullMappingField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(DataRowVersion.Current)]
        public DataRowVersion SourceVersion {
            get {
                return this.sourceVersionField;
            }
            set {
                this.sourceVersionField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DbType {
        
        /// <remarks/>
        AnsiString,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        Int16,
        
        /// <remarks/>
        Int32,
        
        /// <remarks/>
        Int64,
        
        /// <remarks/>
        Object,
        
        /// <remarks/>
        SByte,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        UInt16,
        
        /// <remarks/>
        UInt32,
        
        /// <remarks/>
        UInt64,
        
        /// <remarks/>
        VarNumeric,
        
        /// <remarks/>
        AnsiStringFixedLength,
        
        /// <remarks/>
        StringFixedLength,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        DateTime2,
        
        /// <remarks/>
        DateTimeOffset,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ParameterDirection {
        
        /// <remarks/>
        Input,
        
        /// <remarks/>
        Output,
        
        /// <remarks/>
        InputOutput,
        
        /// <remarks/>
        ReturnValue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DataRowVersion {
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Proposed,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DbParameter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CommandType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        StoredProcedure,
        
        /// <remarks/>
        TableDirect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void WebserviceTestCompletedEventHandler(object sender, WebserviceTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebserviceTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebserviceTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Get_DataSetCompletedEventHandler(object sender, Get_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Getstr_BySqlCompletedEventHandler(object sender, Getstr_BySqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getstr_BySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getstr_BySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStr_ByFieldCompletedEventHandler(object sender, GetStr_ByFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStr_ByFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStr_ByFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStr_ByIdxCompletedEventHandler(object sender, GetStr_ByIdxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStr_ByIdxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStr_ByIdxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_NonQueryCompletedEventHandler(object sender, Execute_NonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_NonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_NonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_ProcedureCompletedEventHandler(object sender, Execute_ProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_ProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_ProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_SqlParameterCompletedEventHandler(object sender, Execute_SqlParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_SqlParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_SqlParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Get_DataSet_DacNameCompletedEventHandler(object sender, Get_DataSet_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DataSet_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DataSet_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Getstr_BySql_DacNameCompletedEventHandler(object sender, Getstr_BySql_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getstr_BySql_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getstr_BySql_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStr_ByField_DacNameCompletedEventHandler(object sender, GetStr_ByField_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStr_ByField_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStr_ByField_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStr_ByIdx_DacNameCompletedEventHandler(object sender, GetStr_ByIdx_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStr_ByIdx_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStr_ByIdx_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_NonQuery_DacNameCompletedEventHandler(object sender, Execute_NonQuery_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_NonQuery_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_NonQuery_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_Procedure_DacNameCompletedEventHandler(object sender, Execute_Procedure_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_Procedure_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_Procedure_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Execute_SqlParameter_DacNameCompletedEventHandler(object sender, Execute_SqlParameter_DacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Execute_SqlParameter_DacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Execute_SqlParameter_DacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591